the process after installing git are:
1. first we have to configure the file on git with our name and email to config use git config --global user.name "//name" , git config --global user.email "email" , git config --list
2. then we have to acces that folder created by cd this changes the directory
3. then we have to import the repo to the code editor by git clone "link" and check its status ; git status
4. status are of four types : untracted (new file added), modified(some thing is modified) , staged(the file is added but not commited) , unmodified(means the changes are commited or no changes are made)
5. in order to add we use git add <filename> to commit we use git commit - m (some message) to add every thing at once use git add . then git commit -m "msg"
6. now we have to push to our github (remote) or to upload local repo content to remote repo : git push origin main
  
 to get to the prev directory we use : cd .. 
 to make a new directory we use command : mkdir 'name'
 to initialise a empty repo we use : git init 
 the new file created new to be pushed on the git so we make a new repo and do the foll steps:
 1. make the same repo on the github then do : git remote add origin <link>
 2. to verify the remote use: git remote -v
 3. to check branch use : git branch and the default branch is called main 
 4. to rename the branch name to 'main' in which the folder is stored use : git branch -M main
 now push using :git push -u origin main  -u means that in future we do not have to write origin main we just have to write git push

- to check all the branches use git branch
- to make a new branch use : git checkout -b branchname
- to navigate or to go to a perticular branch use : git checkout branchname
- to delete a branch use :git branch -d branchname and note we cannot delete the branch we are on
- when we are on a preticular branch and modify the files and add and commit that changes will not be seen on the main file and will only be accessed on that branch
- to push the changes on the github we need to git push origin <that branch name>

To merge two branches 
way 1
use: git diff <branch name>
use: git merge <branch name>

way 2 
using PR - pull request - it means to let you tell others about changes you have pushed to a branch in a repo on github
now to see the changes made on the main branch on the github we use pull command :
git pull origin main - it is used to fetch and download content form a remote repo and immediately update the local repo to match that content

resolving merge conflicts - an event that takes place when git is unable to automatically resolve differences in the code between two commits
to resolve merge conflicts use way 1

now to undo changes :
case 1: staged changes 
    git reset <file name>
    git reset

case 2: commited changes (for one commit)
    git reset HEAD-1

case 3: commited changes (for many commits)
    git reset <commit hash>
    git reset --hard <commit hash>
